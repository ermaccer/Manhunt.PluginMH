#pragma once

enum RwRenderState
{
	rwRENDERSTATENARENDERSTATE = 0x0,
	rwRENDERSTATETEXTURERASTER = 0x1,
	rwRENDERSTATETEXTUREADDRESS = 0x2,
	rwRENDERSTATETEXTUREADDRESSU = 0x3,
	rwRENDERSTATETEXTUREADDRESSV = 0x4,
	rwRENDERSTATETEXTUREPERSPECTIVE = 0x5,
	rwRENDERSTATEZTESTENABLE = 0x6,
	rwRENDERSTATESHADEMODE = 0x7,
	rwRENDERSTATEZWRITEENABLE = 0x8,
	rwRENDERSTATETEXTUREFILTER = 0x9,
	rwRENDERSTATESRCBLEND = 0xA,
	rwRENDERSTATEDESTBLEND = 0xB,
	rwRENDERSTATEVERTEXALPHAENABLE = 0xC,
	rwRENDERSTATEBORDERCOLOR = 0xD,
	rwRENDERSTATEFOGENABLE = 0xE,
	rwRENDERSTATEFOGCOLOR = 0xF,
	rwRENDERSTATEFOGTYPE = 0x10,
	rwRENDERSTATEFOGDENSITY = 0x11,
	rwRENDERSTATEFOGTABLE = 0x12,
	rwRENDERSTATEALPHAPRIMITIVEBUFFER = 0x13,
	rwRENDERSTATECULLMODE = 0x14,
	rwRENDERSTATESTENCILENABLE = 0x15,
	rwRENDERSTATESTENCILFAIL = 0x16,
	rwRENDERSTATESTENCILZFAIL = 0x17,
	rwRENDERSTATESTENCILPASS = 0x18,
	rwRENDERSTATESTENCILFUNCTION = 0x19,
	rwRENDERSTATESTENCILFUNCTIONREF = 0x1A,
	rwRENDERSTATESTENCILFUNCTIONMASK = 0x1B,
	rwRENDERSTATESTENCILFUNCTIONWRITEMASK = 0x1C,
};

enum RwBlendFunction
{
	rwBLENDNABLEND = 0x0,
	rwBLENDZERO = 0x1,
	rwBLENDONE = 0x2,
	rwBLENDSRCCOLOR = 0x3,
	rwBLENDINVSRCCOLOR = 0x4,
	rwBLENDSRCALPHA = 0x5,
	rwBLENDINVSRCALPHA = 0x6,
	rwBLENDDESTALPHA = 0x7,
	rwBLENDINVDESTALPHA = 0x8,
	rwBLENDDESTCOLOR = 0x9,
	rwBLENDINVDESTCOLOR = 0xA,
	rwBLENDSRCALPHASAT = 0xB,
};

enum RwFogType
{
	rwFOGTYPENAFOGTYPE = 0x0,
	rwFOGTYPELINEAR = 0x1,
	rwFOGTYPEEXPONENTIAL = 0x2,
	rwFOGTYPEEXPONENTIAL2 = 0x3,
};

enum RwTextureFilterMode
{
	rwFILTERNAFILTERMODE = 0x0,
	rwFILTERNEAREST = 0x1,
	rwFILTERLINEAR = 0x2,
	rwFILTERMIPNEAREST = 0x3,
	rwFILTERMIPLINEAR = 0x4,
	rwFILTERLINEARMIPNEAREST = 0x5,
	rwFILTERLINEARMIPLINEAR = 0x6,
};

enum RwTextureAddressMode
{
	rwTEXTUREADDRESSNATEXTUREADDRESS = 0x0,
	rwTEXTUREADDRESSWRAP = 0x1,
	rwTEXTUREADDRESSMIRROR = 0x2,
	rwTEXTUREADDRESSCLAMP = 0x3,
	rwTEXTUREADDRESSBORDER = 0x4,
};

enum RwCullMode
{
	rwCULLMODENACULLMODE = 0x0,
	rwCULLMODECULLNONE = 0x1,
	rwCULLMODECULLBACK = 0x2,
	rwCULLMODECULLFRONT = 0x3,
};

enum RwPrimitiveType
{
	rwPRIMTYPENAPRIMTYPE = 0x0,
	rwPRIMTYPELINELIST = 0x1,
	rwPRIMTYPEPOLYLINE = 0x2,
	rwPRIMTYPETRILIST = 0x3,
	rwPRIMTYPETRISTRIP = 0x4,
	rwPRIMTYPETRIFAN = 0x5,
	rwPRIMTYPEPOINTLIST = 0x6,
};



class CRenderer {
public:
	static void PushRenderStateBlend();
	static void PushAndSetRenderState(RwRenderState state, void* value);
	static void RenderStateSetBlend(RwBlendFunction state, RwBlendFunction value);
	static void SetIngameInfoRenderStates(int value);
	static void PopRenderStateAll();
	static void PopRenderStateBlend();
	static void DrawQuad2d(float posX, float posY, float scaleX, float scaleY, int red, int green, int blue, int alpha, int pTexture);
};