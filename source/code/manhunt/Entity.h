#pragma once
#include "Vector.h"
#include "TypeData.h"
#include <rwcore.h>

struct CEntityAnim
{
	void *vTable;
	char field_4;
	char field_5;
	char field_6;
	char field_7;
	char field_8;
	char field_9;
	char field_A;
	char field_B;
	int field_C;
	int field_10;
	int field_14;
	int field_18;
	int field_1C;
	int field_20;
	int field_24;
	int field_28;
};



class CEntity {
public:
	void *vTable;
	int field_4;
	int field_8;
	int field_C;
	int field_10;
	float m_fHealth;
	int field_18;
	int field_1C;
	int field_20;
	int field_24;
	int field_28;
	int field_2C;
	int field_30;
	int field_34;
	int field_38;
	char field_3C;
	char field_3D;
	char field_3E;
	char field_3F;
	int field_40;
	__int16 field_44;
	char field_46;
	char field_47;
	char field_48;
	char field_49;
	char field_4A;
	char field_4B;
	char field_4C;
	char field_4D;
	char field_4E;
	char field_4F;
	int field_50;
	int field_54;
	int field_58;
	int field_5C;
	int field_60;
	int field_64;
	char field_68;
	char field_69;
	char field_6A;
	char field_6B;
	int field_6C;
	char *m_szName;
	char field_74;
	char field_75;
	char field_76;
	char field_77;
	int field_78;
	CTypeData *m_pTypeData;
	int field_80;
	int field_84;
	int field_88;
	int field_8C;
	int field_90;
	int field_94;
	int field_98;
	int field_9C;
	int field_A0;
	int field_A4;
	int m_pPhysics;
	CEntityAnim *m_pEntityAnim;
	int field_B0;
	char field_B4;
	char field_B5;
	char field_B6;
	char field_B7;
	char field_B8;
	char field_B9;
	char field_BA;
	char field_BB;
	int field_BC;
	int field_C0;
	float field_C4;
	int m_iEntityFlags;
	char field_CC;
	char field_CD;
	char field_CE;
	char field_CF;
	char field_D0;
	char field_D1;
	char field_D2;
	char field_D3;
	char field_D4;
	char field_D5;
	char field_D6;
	char field_D7;
	char field_D8;
	char field_D9;
	char field_DA;
	char field_DB;
	int field_DC;
	int field_E0;
	int field_E4;
	char field_E8;
	char field_E9;
	char field_EA;
	char field_EB;
	int field_EC;
	int field_F0;
	int field_F4;
	int field_F8;
	int field_FC;
	char field_100;
	char field_101;
	char field_102;
	char field_103;
	int field_104;
	int field_108;
	int field_10C;
	char field_110;
	char field_111;
	short field_112;
	int field_114;
	int field_118;
	int field_11C;
	int field_120;
	int field_124;
	char field_128;
	char field_129;
	char field_12A;
	char field_12B;
	char field_12C;
	char field_12D;
	char field_12E;
	char field_12F;
	char field_130;
	char field_131;
	char field_132;
	char field_133;
	char field_134;
	char field_135;
	char field_136;
	char field_137;
	char field_138;
	char field_139;
	char field_13A;
	char field_13B;


	void Spawn(CVector* pos, float arg);
	void Spawn(RwMatrix* matrix);
	void SetFrozen(int state);
	void SetName(char* name);
	void SetLocation(CVector* pos);
	void SetFlag(int flag, int status);
	void ResolveCollision();
	void Destroy();
	void Kill();
	CVector* GetLocation();
	RwMatrix* GetEntityMatrix();
};